# ===== FEE COLLECTION SYSTEM CONFIGURATION =====
# Copy this file to .env and configure your API keys
# 
# Quick Start:
# 1. Copy: cp .env.example .env
# 2. Add your exchange API keys below
# 3. Run: python3 run.py
# ===============================================

# ===== TRADING PAIR CONFIGURATION =====
# The cryptocurrency pair to monitor
BASE_CURRENCY=BTC
QUOTE_CURRENCY=USD

# ===== COLLECTION SETTINGS =====
# How often to collect fee data (in seconds)
COLLECTION_INTERVAL_SECONDS=300

# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# ===== EXCHANGE API CREDENTIALS =====
# Add API keys for the exchanges you want to monitor
# Note: Only read-only permissions are required

# Binance.US API credentials
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_API_SECRET=your_binance_secret_here

# Kraken API credentials  
KRAKEN_API_KEY=your_kraken_api_key_here
KRAKEN_API_SECRET=your_kraken_secret_here

# Coinbase Pro API credentials
COINBASE_API_KEY=your_coinbase_api_key_here
COINBASE_SECRET_KEY=your_coinbase_secret_here
COINBASE_PASSPHRASE=your_coinbase_passphrase_here

# Gemini API credentials
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_API_SECRET=your_gemini_secret_here
GEMINI_SANDBOX=false

# ===== CONFIGURATION EXAMPLES =====
# Monitor BTC/USD across all exchanges:
# BASE_CURRENCY=BTC
# QUOTE_CURRENCY=USD

# Monitor ETH/USD with 10-minute intervals:
# BASE_CURRENCY=ETH
# QUOTE_CURRENCY=USD
# COLLECTION_INTERVAL_SECONDS=600

# Debug mode with verbose logging:
# LOG_LEVEL=DEBUG

# ===== SECURITY NOTES =====
# - Only read-only API permissions are required
# - Never commit your .env file with real API keys
# - The system only queries data, never places trades
# - Keep your API keys secure and private
